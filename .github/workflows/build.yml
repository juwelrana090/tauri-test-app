name: Publish Release
on:
  push:
    tags:
      - 'v*'
    branches:
      - '*'
  workflow_dispatch:

env:
  APP_NAME: "Sample Desktop App"

jobs:
  changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build changelog
        id: build_changelog
        run: |
          PREV_TAG=$(git tag --list v* | tail -n2 | head -n1)
          echo "changelog=$(git log $PREV_TAG...${{ github.ref_name }} --pretty=format:"- %s")" >> $GITHUB_OUTPUT
    outputs:
      changelog: ${{ steps.build_changelog.outputs.changelog }}

  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-latest'
            args: ''
          - platform: 'windows-latest'
            args: ''
    runs-on: ${{ matrix.platform }}
    needs: [changelog]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Build the changelog based on the commit messages between the versioned tags
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      # Install dependencies
      - name: Install dependencies
        run: |
          npm install

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      # Install platform-specific dependencies
      - name: Install Ubuntu dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y curl libwebkit2gtk-4.1-dev build-essential libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev patchelf libfuse2 file

      - name: Install macOS dependencies
        if: matrix.platform == 'macos-latest'
        run: |
          brew update
          brew install curl libwebkit2gtk build-essential libssl libgtk-3 librsvg patchelf

      - name: Install Windows dependencies
        if: matrix.platform == 'windows-latest'
        run: |
          choco install curl libwebkit2gtk build-essential libssl libgtk-3 librsvg patchelf

      # CI Build
      - name: CI Build
        if: ${{ github.ref_type == 'branch' }}
        run: |
          npm run tauri build

      # CI upload Windows
      - name: CI upload Windows
        if: ${{ (github.ref_type == 'branch' || github.ref_type == 'tag') && matrix.platform == 'windows-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: 'Windows Installers'
          path: |
            src-tauri/release/bundle/msi/*.msi
            src-tauri/release/bundle/nsis/*.exe

      # CI upload macOS
      - name: CI upload macOS
        if: ${{ (github.ref_type == 'branch' || github.ref_type == 'tag') && matrix.platform == 'macos-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: 'macOS Installer'
          path: |
            src-tauri/release/bundle/dmg/*.dmg

      # CI upload Linux
      - name: CI upload Linux
        if: ${{ (github.ref_type == 'branch' || github.ref_type == 'tag') && matrix.platform == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: 'Linux Distributions'
          path: |
            src-tauri/target/release/bundle/deb/*.deb
            src-tauri/target/release/bundle/AppImage/*.AppImage

      # Build Tauri app for tagged releases
      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        if: ${{ github.ref_type == 'tag' }}
        env:
          CI: true
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "${{ env.APP_NAME }} v__VERSION__"
          releaseBody: |
            ${{needs.changelog.outputs.changelog}}
            See the assets to download this version and install.
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
