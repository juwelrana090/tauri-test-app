name: Publish Release

on:
  push:
    tags:
      - "v*"
    branches:
      - "*"
  workflow_dispatch:

env:
  APP_NAME: "Sample Desktop App"

jobs:
  changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build changelog
        id: build_changelog
        run: |
          PREV_TAG=$(git tag --list v* | tail -n2 | head -n1)
          echo "changelog=$(git log $PREV_TAG...${{ github.ref_name }} --pretty=format:'- %s')" >> $GITHUB_ENV
    outputs:
      changelog: ${{ steps.build_changelog.outputs.changelog }}

  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm-based macs (M1 and above)
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel-based macs
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-latest"
            args: ""
          - platform: "windows-latest"
            args: ""
    runs-on: ${{ matrix.platform }}
    needs: [changelog]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: |
          npm install

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install Tauri CLI
        run: |
          npm install @tauri-apps/cli

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Install macOS dependencies
        if: matrix.platform == 'macos-latest'
        run: |
          brew update
          brew install libwebsockets

      - name: Install Ubuntu dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libgtk-3-dev \
            libglib2.0-dev \
            pkg-config \
            build-essential \
            curl \
            cmake
          rustup target add x86_64-unknown-linux-gnu

      - name: Install Windows dependencies
        if: matrix.platform == 'windows-latest'
        run: |
          choco install -y visualstudio2022buildtools windows-sdk-10 cmake
          choco install -y mingw ninja
          rustup target add x86_64-pc-windows-msvc

      - name: CI Build
        if: ${{ github.ref_type == 'branch' }}
        run: |
          npm run tauri build

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        if: ${{ github.ref_type == 'tag' }}
        env:
          CI: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "${{ env.APP_NAME }} v__VERSION__"
          releaseBody: |
            ${{ needs.changelog.outputs.changelog }}
            See the assets to download this version and install.
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
